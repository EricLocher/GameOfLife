// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWTexture2D<float4> Input;

bool CheckSurroundings(uint3 pos){
	int check = 0;

	for(int x = -1; x <= 1; x++){
		for(int y = -1; y <= 1; y++){
			if(x == 0 && y == 0) { continue; }
			else if(Input[pos + int2(x, y)].x > 0){
				check++;
			}
		}
	}

	if(check >= 2 && Input[pos.xy].x > 0){
		if(check < 4)
			return true;
		else
			return false;
	} else if(check == 3 && Input[pos.xy].x == 0){
		return true;
	} else {
		return false;
	}

}

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

	if(CheckSurroundings(id)){
		if(Result[id.xy].x <= 0)
			Result[id.xy] = float4(1, 1, 1, 1);
		else
			Result[id.xy].x * 0.5;
	} else {
		Result[id.xy] = float4(0, 0, 0, 1);
	}


	//Result[id.xy] = neighborPixels / 9;
}